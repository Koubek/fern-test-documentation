# This is a basic workflow to help you get started with Actions

name: Update Fern API Documentation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      preview_mode:
        description: 'Generate docs in preview mode'
        required: true
        default: true
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish:
    # The type of runner that the job will run on
    runs-on: windows-latest
    environment: DEFAULT_ENV

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Copy API files to Fern directory
      - name: Copy API files to Fern directory
        shell: pwsh
        run: |
          $currentPath = (Get-Location).Path
          $sourcePath = Join-Path $currentPath "APPLICATION\src\_API_MODERN_SERVICES"
          $destinationPath = Join-Path $currentPath "fern\definition"
          $null = Copy-Item -Path $sourcePath -Destination $destinationPath -Recurse -Force
          Write-Host "Files copied successfully."

      # Runs a single command using the runners shell
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Runs a set of commands using the runners shell
      - name: Install Fern
        run: npm install -g fern-api

      - name: Check API Documentation
        run: |
          cd fern
          fern check

      # Runs a set of commands using the runners shell
      - name: Generate API Documentation
        env:
          FERN_TOKEN: ${{ secrets.FERN_TOKEN }}
        run: |
          cd fern
          if (${{ inputs.preview_mode }}) {
            fern generate --docs --preview
          } else {
            fern generate --docs
          }

      # Runs a set of commands using the runners shell
      - name: Notify on success
        run: |
          echo "API documentation has been successfully updated and deployed."
